@mixin animation($name, $duration, $time-function) {
  animation-name: $name;
  animation-duration: $duration;
  animation-timing-function: $time-function;
}

@mixin clearfix {
  &::after {
    /*Used to show pseudo elements*/
    content: "";
    display: table;
    clear: both;
  }
}
@mixin background_gradient_with_image(
  $img_url,
  $gradient_start_colour,
  $gradient_end_colour
) {
  background-image: linear-gradient(
      to bottom right,
      rgba($gradient_start_colour, 0.8),
      rgba($gradient_end_colour, 0.8)
    ),
    url(#{$img_url});
}

@mixin absolute_center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
/*
 * $breakpoint argument choices:
 * - phone
 * - tab-port
 * - tab-land
 * - big-desktop

 * 1rem = 16px
 */
@mixin responsive($breakpoint) {
  @if $breakpoint == phone {
    //600px
    @media (max-width: 37.5rem) {
      @content;
    }
  }
  @if $breakpoint == tab-port {
    //900px
    @media (max-width: 56.25rem) {
      @content;
    }
  }
  @if $breakpoint == tab-land {
    //1200px
    @media (max-width: 75rem) {
      @content;
    }
  }
  @if $breakpoint == big-desktop {
    //1800px
    @media (min-width: 112.5rem) {
      @content;
    }
  }
}
